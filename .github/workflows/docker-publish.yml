name: Docker publish

on:
  push:
    # Publish `main` as Docker `latest` image.
    branches:
      - main
    paths-ignore:
      - '**.md'

  pull_request:
    # run tests only for pull requests to `main`
    branches:
      - main
    paths-ignore:
      - '**.md'

env:
  # Docker image
  # DOCKER_PASSWORD and DOCKER_USER accessible via secrets
  DOCKER_ORG: tacc
  DOCKER_REPO: reactors

jobs:
  build-test-push:
    name: Build, test, and push Docker image
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 1
      matrix:
        include:
          - python-version: 3.6
            base-image: python:3.6-buster
            tags: python3.6
          - python-version: 3.7
            base-image: python:3.7-buster
            tags: python3.7,python3,latest
    steps:

      # Install build dependencies
      - uses: actions/checkout@v2
      - name: Force locale to UTF-8
        run: |
          sudo apt-get update -q
          sudo apt-get install -yq locales locales-all make
          sudo apt-get clean -q
          echo "LC_ALL=en_US.UTF-8" >> $GITHUB_ENV
          echo "LANG=en_US.UTF-8" >> $GITHUB_ENV
          echo "LANGUAGE=en_US.UTF-8" >> $GITHUB_ENV
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64
      - name: Install pip dependencies
        run: python -m pip install -q --upgrade pip poetry
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      # Build and test dist
      - name: Run pytests
        env:
          _TEST_LOGGLY_CUSTOMER_TOKEN: ${{ secrets.CUSTOMER_TOKEN_LOGGLY }}
        run: |
          poetry install
          poetry run python3 -m pytest -k 'not tapis_auth'
      - run: poetry build

      # Build image and test default CMD
      - name: Generate env.DOCKER_TAGS and env.PRIMARY_TAG
        run: |
          DOCKER_TAGS=$(echo "${{ matrix.tags }}" | \
            sed -e 's/\,/,${{ env.DOCKER_ORG }}\/${{ env.DOCKER_REPO }}:/g' | \
            sed -e 's/^/${{ env.DOCKER_ORG }}\/${{ env.DOCKER_REPO }}:/g')
          PRIMARY_TAG=$(echo ${DOCKER_TAGS} | sed -e 's/,.*$//g')
          echo "using DOCKER_TAGS=${DOCKER_TAGS}"
          echo "using PRIMARY_TAG=${PRIMARY_TAG}"
          echo "DOCKER_TAGS=${DOCKER_TAGS}" >> $GITHUB_ENV
          echo "PRIMARY_TAG=${PRIMARY_TAG}" >> $GITHUB_ENV
      - name: Build Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          build-args: |
            SDIST=dist/reactors-*.tar.gz
            BASE_IMAGE=${{ matrix.base-image }}
          file: Dockerfile
          pull: true
          load: true
          push: false
          tags: ${{ env.DOCKER_TAGS }}
      - name: Test image using default CMD
        run: |
          docker run --rm ${{ env.PRIMARY_TAG }}
          docker run --rm ${{ env.PRIMARY_TAG }} python3 -m reactors.cli usage
          docker run --rm ${{ env.PRIMARY_TAG }} python3 -m reactors.cli run

      # Push to DockerHub
      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push image to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile
          build-args: |
            SDIST=dist/reactors-*.tar.gz
            BASE_IMAGE=${{ matrix.base-image }}
          push: true
          tags: ${{ env.DOCKER_TAGS }}
